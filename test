#!/usr/bin/php
<?php
//////////////////////////
//////////////////////////
// USAGE ./test [detail] [random]
//////////////////////////
//////////////////////////

///////// ARGUMENT //////////
$testRandom = array_search("random", $argv) ? true : false;
$detail 	= array_search("detail", $argv) ? true : false;
// $testSignal = array_search("signal", $argv)	? true : false;
$testSignal = TRUE;
//////////////////////////

$filetest			= "./testraw";
$shellexec1			= "42sh";
$shellexec2			= "bash";
// $TG					= "1>&- 2>&-";
$commentChar		= '#';
$randomTest			= 100;
$randomLengthMax	= 10;

//////////////// HERE RANDOM /////////////////////
$rlogic_operator 	= array("&&", "||", ";");
$rcommand 			= array("echo", "ls", "pwd");
//////////////// HERE RANDOM /////////////////////

$COLORGREY 		= "\033[37m";
$COLORPINK 		= "\033[36m";
$COLORCYAN 		= "\033[35m";
$COLORBLUE 		= "\033[34m";
$COLORYELLOW 	= "\033[33m";
$COLORGREEN 	= "\033[32m";
$COLORRED 		= "\033[31m";
$COLORCLOSE 	= "\033[0m";

$allerror 	= "";
$countAll 	= 0;
$countOK 	= 0;
$countMaybe = 0;

if ($testRandom)
{
	while ($countAll < $randomTest) {

		// $command = random_bytes(10);
		$command = getRandomCommand();

		compute($command);
	}
}
else
{
	$content = file($filetest, FILE_IGNORE_NEW_LINES | FILE_SKIP_EMPTY_LINES);
	foreach ($content as $key => $command) {
		$tmp = trim($command);
		if ($command && $tmp[0] == $commentChar)
			continue;
		compute($command);
	}
}

echo $allerrorcheck;
echo $allerror;
$nb = $countOK + $countMaybe;
$nb2 = $countAll - $countMaybe;
if ($countOK == $nb2)
	echo "$COLORGREEN";
else
	echo "$COLORRED";

echo " ---------- Total $countOK/$nb2 ----------";
echo "$COLORCLOSE\n";

if ($nb != $countAll)
{
	print "$COLORRED"." ------ REGRESSION DETECTED  ------"."$COLORCLOSE\n";
	exit(1);
}

/////////////////////////////////////////////////////////////////////////////////
/////////////////////////////////// FUNCTION ////////////////////////////////////
/////////////////////////////////////////////////////////////////////////////////

function getRandomCommand() {
	global $rcommand;
	global $rlogic_operator;

	$command  = "";
	$command .= get_random($rcommand);
	$command .= " ";
	$command .= get_random_argument(0);
	$command .= " ";
	$command .= get_random_string(0);
	$command .= " ";
	$command .= get_random($rlogic_operator);
	$command .= " ";
	$command .= get_random($rcommand);

	return ($command);
}

function compute($command) {
	global $commentChar;
	global $countMaybe;
	global $countOK;
	global $countAll;
	global $allerror;
	global $allerrorcheck;
	global $detail;
	global $testSignal;
	global $COLORGREEN;
	global $COLORBLUE;
	global $COLORYELLOW;
	global $COLORRED;
	global $COLORCLOSE;
	global $shellexec1;
	global $shellexec2;

	$countAll++;
	$result1  = exec("./$shellexec1 -c '$command' 2>&1", $null, $return_var1);
	$result11 = exec("./$shellexec1 -c '$command' 2>/dev/null", $null, $return_var11);
	$result2  = exec("$shellexec2 -c '$command' 2>&1", $null, $return_var2);
	$result22 = exec("$shellexec2 -c '$command' 2>/dev/null", $null, $return_var22);

	file_put_contents("res1", $result1."\n");
	file_put_contents("res11", $result11."\n");
	file_put_contents("res2", $result2."\n");
	file_put_contents("res22", $result22."\n");

	$res = shell_exec("diff res1 res2");
	$ERRSTDOUT = shell_exec("diff res11 res22");
	unlink("res1");
	unlink("res11");
	unlink("res2");
	unlink("res22");

	if ($res || $ERRSTDOUT || ($testSignal && ($return_var1 != $return_var2)))
	{
		if ($ERRSTDOUT || ($testSignal && $return_var1 != $return_var2))
		{
			$allerror .= "$COLORRED [KO] $COLORCLOSE \"$command\"\n";
		}
		else
		{
			$countMaybe++;
			$allerrorcheck .= "$COLORYELLOW [CK] $COLORCLOSE \"$command\"\n";
		}
		if ($detail)
		{
			$res = preg_replace('/---\n|1c1\n|>|</', '', $res);
			if ($ERRSTDOUT || ($testSignal && $return_var1 != $return_var2))
				$allerror .= "$res";
			else
				$allerrorcheck .= "$res";
		}
		if ($testSignal && ($return_var1 != $return_var2))
		{
			if ($ERRSTDOUT || ($testSignal && $return_var1 != $return_var2))
				$allerror .= "$COLORBLUE DIFFERENT SIGNAL: $COLORCLOSE $shellexec1=$return_var1 vs $shellexec2=$return_var2\n";
			else
				$allerrorcheck .= "$COLORBLUE DIFFERENT SIGNAL: $COLORCLOSE $shellexec1=$return_var1 vs $shellexec2=$return_var2\n";
		}
		if (!$ERRSTDOUT)
				$allerrorcheck .= "\n";

	}
	else
	{
		$countOK++;
		echo "$COLORGREEN [OK] $COLORCLOSE \"$command\"\n";
	}
}

function get_ramdom_char() {
	$r = rand(0, 2);
	$chr = "";
	if ($r == 0)
		$chr = chr(rand(64, 90));	// @ A-Z
	if ($r == 1)
		$chr = chr(rand(97, 122));	// a-z
	if ($r == 2)
		$chr = chr(rand(48, 57));	// 0-9
	// if ($r == 2)
		// $chr = chr(45);	// -
	// return (chr(rand(32, 126)));
	return ($chr);
}

function get_random_string($length = 10) {
	global $randomLengthMax;

	if ($length < 0)
		$length = -$length;
	$str = "";
	if ($length == 0)
		$length = rand(1, $randomLengthMax);
	while ($length--)
		$str .= get_ramdom_char();
	return ($str);
}

function get_random_argument($length = 10) {
	global $randomLengthMax;

	if ($length < 0)
		$length = -$length;
	$str = "-";
	if ($length == 0)
		$length = rand(1, $randomLengthMax);
	$str .= get_random_string($length);
	return ($str);
}

function get_random($array) {

	if (count($array) <= 0)
		return ("");
	$n = rand(0, count($array) -1);
	return ($array[$n]);
}
